definitions:
  models.CardRequest:
    properties:
      card_number:
        type: string
      ccv:
        type: string
      expiration_date:
        type: string
    required:
    - card_number
    - ccv
    - expiration_date
    type: object
  models.CreateProcessReq:
    properties:
      amount:
        type: integer
      card_number:
        type: string
      product_id:
        type: string
    required:
    - amount
    - card_number
    - product_id
    type: object
  models.CreateProductRequest:
    properties:
      color:
        items:
          type: string
        type: array
      description:
        type: string
      end_date:
        type: string
      limit_of_product:
        type: integer
      name:
        type: string
      price_without_stock:
        type: number
      size:
        items:
          type: string
        type: array
      start_date:
        type: string
      stock:
        type: integer
    required:
    - description
    - end_date
    - limit_of_product
    - name
    - price_without_stock
    - start_date
    - stock
    type: object
  models.GetProductReq:
    properties:
      max_price:
        type: number
      min_price:
        type: number
      name:
        type: string
      seller_id:
        type: string
      stock:
        type: integer
    type: object
  models.UpdateProcessReq:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  models.UpdateProductRequest:
    properties:
      color:
        items:
          type: string
        type: array
      description:
        type: string
      end_date:
        type: string
      limit_of_product:
        type: integer
      name:
        type: string
      price_without_stock:
        type: number
      size:
        items:
          type: string
        type: array
      start_date:
        type: string
      stock:
        type: integer
    type: object
  sale.GetProcessByIdResponse:
    properties:
      amount:
        type: integer
      id:
        type: string
      product_id:
        type: string
      status:
        type: string
      user_id:
        type: string
    type: object
  sale.GetProcessByProductIdResponse:
    properties:
      processes:
        items:
          $ref: '#/definitions/sale.Processes'
        type: array
    type: object
  sale.GetProcessByUserIdResponse:
    properties:
      processes:
        items:
          $ref: '#/definitions/sale.Processes'
        type: array
    type: object
  sale.GetProcessOfUserByProductIdResponse:
    properties:
      processes:
        items:
          $ref: '#/definitions/sale.Processes'
        type: array
    type: object
  sale.GetProductByIdResponse:
    properties:
      color:
        items:
          type: string
        type: array
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      limit_of_product:
        type: integer
      name:
        type: string
      photos:
        items:
          type: string
        type: array
      price:
        type: number
      price_without_stock:
        type: number
      seller_id:
        type: string
      size:
        items:
          type: string
        type: array
      start_date:
        type: string
      stock:
        type: integer
    type: object
  sale.GetProductResponse:
    properties:
      product:
        items:
          $ref: '#/definitions/sale.Products'
        type: array
      total_count:
        type: integer
    type: object
  sale.GetProductsByUserIdResponse:
    properties:
      product:
        items:
          $ref: '#/definitions/sale.Products'
        type: array
    type: object
  sale.ProcessResponse:
    properties:
      id:
        type: string
    type: object
  sale.Processes:
    properties:
      amount:
        type: integer
      id:
        type: string
      product_id:
        type: string
      status:
        type: string
      user_id:
        type: string
    type: object
  sale.ProductId:
    properties:
      id:
        type: string
    type: object
  sale.Products:
    properties:
      color:
        items:
          type: string
        type: array
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      limit_of_product:
        type: integer
      name:
        type: string
      photos:
        items:
          type: string
        type: array
      price:
        type: number
      price_without_stock:
        type: number
      seller_id:
        type: string
      size:
        items:
          type: string
        type: array
      start_date:
        type: string
      stock:
        type: integer
    type: object
  user.Card:
    properties:
      card_number:
        type: string
      expiration_date:
        type: string
      id:
        type: string
      user_id:
        type: string
    type: object
  user.CreateCardRes:
    properties:
      id:
        type: string
    type: object
  user.GetCardsOfUserRes:
    properties:
      cards:
        items:
          $ref: '#/definitions/user.Card'
        type: array
    type: object
info:
  contact: {}
paths:
  /cards:
    get:
      description: it will Get User Cards
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetCardsOfUserRes'
        "401":
          description: Invalid token
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get User Cards
      tags:
      - CARDS
    post:
      description: it will Create Cards
      parameters:
      - description: info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.CardRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.CreateCardRes'
        "400":
          description: Invalid data
          schema:
            type: string
        "401":
          description: Invalid token
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Cards
      tags:
      - CARDS
  /cards/amount/{card_number}:
    get:
      description: it will Get Amount Of User Card
      parameters:
      - description: card_number
        in: path
        name: card_number
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.GetCardsOfUserRes'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Amount Of User Card
      tags:
      - CARDS
  /process:
    get:
      description: Get Process By User Id
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.GetProcessByUserIdResponse'
        "401":
          description: Invalid token
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - PROCESS
  /process/{id}:
    delete:
      description: Cancel Process
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - PROCESS
    get:
      description: Get Process By Id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.GetProcessByIdResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - PROCESS
    put:
      description: Update Process
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProcessReq'
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - PROCESS
  /process/buy:
    post:
      description: it will Create Process
      parameters:
      - description: info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.CreateProcessReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.ProcessResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "401":
          description: Invalid token
          schema:
            type: string
        "404":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - PROCESS
  /process/products/{product_id}:
    get:
      description: Get Process By Product Id
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.GetProcessByProductIdResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - PROCESS
  /process/user/{product_id}/{user_id}:
    get:
      description: Get Process Of User By Product Id
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      - description: user_id
        in: path
        name: user_id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.GetProcessOfUserByProductIdResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      tags:
      - PROCESS
  /products:
    get:
      description: it will Get Seller Products
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.GetProductsByUserIdResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "401":
          description: Invalid token
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Seller Products
      tags:
      - PRODUCTS
    post:
      description: it will Create Product
      parameters:
      - description: info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.CreateProductRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.ProductId'
        "400":
          description: Invalid data
          schema:
            type: string
        "401":
          description: Invalid token
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - PRODUCTS
  /products/{id}:
    delete:
      description: it will Delete Product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: message
          schema:
            type: string
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Product
      tags:
      - PRODUCTS
    get:
      description: it will Get Product By ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.GetProductByIdResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Product By ID
      tags:
      - PRODUCTS
    put:
      description: it will Update Product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProductRequest'
      responses:
        "200":
          description: message
          schema:
            type: string
        "400":
          description: Invalid data
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Update Product
      tags:
      - PRODUCTS
  /products/list:
    post:
      description: it will Get Products List
      parameters:
      - description: limit
        in: query
        name: limit
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: info
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.GetProductReq'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sale.GetProductResponse'
        "400":
          description: Invalid data
          schema:
            type: string
        "404":
          description: Invalid user
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get Products List
      tags:
      - PRODUCTS
  /products/photo/{product_id}:
    delete:
      consumes:
      - multipart/form-data
      description: Upload Product Photo
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      - description: url
        in: query
        name: url
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: UploadProductPhoto
      tags:
      - PRODUCTS
    post:
      consumes:
      - multipart/form-data
      description: Upload Product Photo
      parameters:
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      - description: UploadMediaForm
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: UploadProductPhoto
      tags:
      - PRODUCTS
securityDefinitions:
  ApiKeyAuth:
    description: API Gateway
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
